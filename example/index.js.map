{"version":3,"sources":["../node_modules/._browser-pack@6.0.4@browser-pack/_prelude.js","../src/example/index.js","index.js","../src/example/lib/scale.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","hash","window","location","replace","$points","document","getElementById","config","level1","minScale","maxScale","minDelay","maxDelay","level2","level3","level4","updatePoint","$point","position","scale","Math","random","delay","style","cssText","y","x","className","setTimeout","start","data","configs","scatterMap","ScatterMap","include","exculde","randomFromGroup","Array","isArray","_loop","_loop2","j","createElement","addEventListener","appendChild","count","ajax","url","options","xhr","XMLHttpRequest","onreadystatechange","readyState","status","success","JSON","parse","responseText","err","error","open","method","setRequestHeader","send","stringify","$pic","onload","res","map","item","conf","level","_extends","name","src","image","./lib/scale.js","2","resetFontSize","docElt","documentElement","fontSize","min","max","clientWidth","remBase","console","log"],"mappings":"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","file":"index.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","require('./lib/scale.js');\n\nconst hash = window.location.hash.replace(/^#/, '');\n\nconst $points = document.getElementById('points');\n\nconst config = {\n\tlevel1: {\n\t\tminScale: 0.1,\n\t\tmaxScale: 0.3,\n\t\tminDelay: 200,\n\t\tmaxDelay: 1600\n\t},\n\tlevel2: {\n\t\tminScale: 0.2,\n\t\tmaxScale: 0.5,\n\t\tminDelay: 300,\n\t\tmaxDelay: 1700\n\t},\n\tlevel3: {\n\t\tminScale: 0.5,\n\t\tmaxScale: 0.7,\n\t\tminDelay: 400,\n\t\tmaxDelay: 1800\n\t},\n\tlevel4: {\n\t\tminScale: 0.8,\n\t\tmaxScale: 1.2,\n\t\tminDelay: 500,\n\t\tmaxDelay: 2000\n\t}\n};\n\n/**\n * 更新点的状态和样式\n * @method updatePoint\n * @param {Node} [$point] 节点\n * @param {Object} [position] 坐标\n * @param {Object} [config] 配置项\n */\nfunction updatePoint($point, position, config) {\n\n\tif (!$point || !position || !config) {\n\t\treturn;\n\t}\n\n\tlet scale = config.minScale + ((config.maxScale - config.minScale) * Math.random()); // 随机缩放倍数\n\tlet delay = config.minDelay + ((config.maxDelay - config.minDelay) * Math.random()); // 随机延迟时间\n\n\t$point.style.cssText = `transform: scale(${ scale }); top: ${ position.y }; left: ${ position.x };`;\n\n\t$point.className = 'point';\n\n\tsetTimeout(() => {\n\t\t$point.className = 'point run';\n\t}, delay);\n}\n\n/**\n * 开始创建节点\n * @method start\n * @param {Object} [data] 节点数据\n * @param {Object} [configs] 配置项\n */\nfunction start(data, configs) {\n\n\tconst scatterMap = new ScatterMap(data); // 工具实例化\n\n\tif (!Array.isArray(configs)) {\n\t\tconfigs = [configs];\n\t}\n\n\tfunction position(config) {\n\t\tif (!config.include && !config.exculde) { // 如果不是特定分组\n\t\t\treturn scatterMap.random(); // 根据权重随机获取坐标\n\t\t} else {\n\t\t\treturn scatterMap.randomFromGroup(config.include, config.exculde); // 返回特定条件下分组的坐标\n\t\t}\n\t}\n\n\tfor (let i = 0; i < configs.length; i++) {\n\t\tlet config = configs[i];\n\n\t\tfor (let j = 0; j < config.count; j++) {\n\n\t\t\tlet $point = document.createElement('span');\n\n\t\t\t$point.addEventListener('animationend', () => { // 动画结束后\n\t\t\t\tupdatePoint($point, position(config), config);\n\t\t\t});\n\n\t\t\tupdatePoint($point, position(config), config);\n\n\t\t\t$points.appendChild($point);\n\n\t\t}\n\t}\n}\n\n// 异步请求\nfunction ajax(url, options) {\n\tlet xhr = new XMLHttpRequest();\n\txhr.onreadystatechange = function() {\n\t\tif (xhr.readyState == 4) {\n\t\t\tif (xhr.status == 200) {\n\t\t\t\tif (typeof options.success === 'function') {\n\t\t\t\t\tlet data = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata = JSON.parse(xhr.responseText);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t\toptions.success(data);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (typeof options.error === 'function') {\n\t\t\t\t\toptions.error(xhr);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\txhr.open(options.method, url, true);\n\txhr.setRequestHeader('Content-type', 'application/json');\n\txhr.send(JSON.stringify(options.data || {}));\n}\n\n// 初始化\nfunction init() {\n\tlet url = '';\n\n\tif (hash) { // 如果有hash值，则为在线预览\n\t\turl = '/example/online.json';\n\t} else { // 否则为例子\n\t\turl = '/example/example.json';\n\t}\n\n\tajax(url, {\n\t\tmethod: 'GET',\n\t\tsuccess(data) {\n\n\t\t\tlet $pic = document.getElementById('pic');\n\n\t\t\t$pic.onload = () => {\n\t\t\t\tif (hash) {\n\t\t\t\t\tstart(data, {\n\t\t\t\t\t\tminScale: 0.2,\n\t\t\t\t\t\tmaxScale: 1.2,\n\t\t\t\t\t\tminDelay: 300,\n\t\t\t\t\t\tmaxDelay: 2000\n\t\t\t\t\t});\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet $main = document.getElementById('main');\n\n\t\t\t\t\t$main.className = 'main example';\n\n\t\t\t\t\tajax('/data', {\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\tsuccess(res) {\n\t\t\t\t\t\t\tif (res.code === 200) {\n\t\t\t\t\t\t\t\tstart(data, res.data.map((item) => {\n\t\t\t\t\t\t\t\t\tlet conf = config[item.level];\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tinclude: item.name,\n\t\t\t\t\t\t\t\t\t\tcount: item.count,\n\t\t\t\t\t\t\t\t\t\t...conf\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$pic.src = data.image;\n\t\t}\n\t});\n}\n\ninit();\n","(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\nrequire('./lib/scale.js');\n\nconst hash = window.location.hash.replace(/^#/, '');\n\nconst $points = document.getElementById('points');\n\nconst config = {\n\tlevel1: {\n\t\tminScale: 0.1,\n\t\tmaxScale: 0.3,\n\t\tminDelay: 200,\n\t\tmaxDelay: 1600\n\t},\n\tlevel2: {\n\t\tminScale: 0.2,\n\t\tmaxScale: 0.5,\n\t\tminDelay: 300,\n\t\tmaxDelay: 1700\n\t},\n\tlevel3: {\n\t\tminScale: 0.5,\n\t\tmaxScale: 0.7,\n\t\tminDelay: 400,\n\t\tmaxDelay: 1800\n\t},\n\tlevel4: {\n\t\tminScale: 0.8,\n\t\tmaxScale: 1.2,\n\t\tminDelay: 500,\n\t\tmaxDelay: 2000\n\t}\n};\n\n/**\n * 更新点的状态和样式\n * @method updatePoint\n * @param {Node} [$point] 节点\n * @param {Object} [position] 坐标\n * @param {Object} [config] 配置项\n */\nfunction updatePoint($point, position, config) {\n\n\tif (!$point || !position || !config) {\n\t\treturn;\n\t}\n\n\tlet scale = config.minScale + ((config.maxScale - config.minScale) * Math.random()); // 随机缩放倍数\n\tlet delay = config.minDelay + ((config.maxDelay - config.minDelay) * Math.random()); // 随机延迟时间\n\n\t$point.style.cssText = `transform: scale(${ scale }); top: ${ position.y }; left: ${ position.x };`;\n\n\t$point.className = 'point';\n\n\tsetTimeout(() => {\n\t\t$point.className = 'point run';\n\t}, delay);\n}\n\n/**\n * 开始创建节点\n * @method start\n * @param {Object} [data] 节点数据\n * @param {Object} [configs] 配置项\n */\nfunction start(data, configs) {\n\n\tconst scatterMap = new ScatterMap(data); // 工具实例化\n\n\tif (!Array.isArray(configs)) {\n\t\tconfigs = [configs];\n\t}\n\n\tfunction position(config) {\n\t\tif (!config.include && !config.exculde) { // 如果不是特定分组\n\t\t\treturn scatterMap.random(); // 根据权重随机获取坐标\n\t\t} else {\n\t\t\treturn scatterMap.randomFromGroup(config.include, config.exculde); // 返回特定条件下分组的坐标\n\t\t}\n\t}\n\n\tfor (let i = 0; i < configs.length; i++) {\n\t\tlet config = configs[i];\n\n\t\tfor (let j = 0; j < config.count; j++) {\n\n\t\t\tlet $point = document.createElement('span');\n\n\t\t\t$point.addEventListener('animationend', () => { // 动画结束后\n\t\t\t\tupdatePoint($point, position(config), config);\n\t\t\t});\n\n\t\t\tupdatePoint($point, position(config), config);\n\n\t\t\t$points.appendChild($point);\n\n\t\t}\n\t}\n}\n\n// 异步请求\nfunction ajax(url, options) {\n\tlet xhr = new XMLHttpRequest();\n\txhr.onreadystatechange = function() {\n\t\tif (xhr.readyState == 4) {\n\t\t\tif (xhr.status == 200) {\n\t\t\t\tif (typeof options.success === 'function') {\n\t\t\t\t\tlet data = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata = JSON.parse(xhr.responseText);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t\toptions.success(data);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (typeof options.error === 'function') {\n\t\t\t\t\toptions.error(xhr);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\txhr.open(options.method, url, true);\n\txhr.setRequestHeader('Content-type', 'application/json');\n\txhr.send(JSON.stringify(options.data || {}));\n}\n\n// 初始化\nfunction init() {\n\tlet url = '';\n\n\tif (hash) { // 如果有hash值，则为在线预览\n\t\turl = '/example/online.json';\n\t} else { // 否则为例子\n\t\turl = '/example/example.json';\n\t}\n\n\tajax(url, {\n\t\tmethod: 'GET',\n\t\tsuccess(data) {\n\n\t\t\tlet $pic = document.getElementById('pic');\n\n\t\t\t$pic.onload = () => {\n\t\t\t\tif (hash) {\n\t\t\t\t\tstart(data, {\n\t\t\t\t\t\tminScale: 0.2,\n\t\t\t\t\t\tmaxScale: 1.2,\n\t\t\t\t\t\tminDelay: 300,\n\t\t\t\t\t\tmaxDelay: 2000\n\t\t\t\t\t});\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet $main = document.getElementById('main');\n\n\t\t\t\t\t$main.className = 'main example';\n\n\t\t\t\t\tajax('/data', {\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\tsuccess(res) {\n\t\t\t\t\t\t\tif (res.code === 200) {\n\t\t\t\t\t\t\t\tstart(data, res.data.map((item) => {\n\t\t\t\t\t\t\t\t\tlet conf = config[item.level];\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tinclude: item.name,\n\t\t\t\t\t\t\t\t\t\tcount: item.count,\n\t\t\t\t\t\t\t\t\t\t...conf\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$pic.src = data.image;\n\t\t}\n\t});\n}\n\ninit();\n\n},{\"./lib/scale.js\":2}],2:[function(require,module,exports){\n// 基于rem的等比缩放\nfunction resetFontSize() {\n\tvar docElt = document.documentElement;\n\tdocElt.style.fontSize = Math.min(\n\t\tMath.max(0.8, docElt.clientWidth / 1440), 1.2\n\t) * (window.remBase || 100) + 'px';\n\tconsole.log(docElt.clientWidth / 1440);\n\treturn resetFontSize;\n}\n\nwindow.addEventListener('resize', resetFontSize(), false);\n},{}]},{},[1])\n\n","// 基于rem的等比缩放\nfunction resetFontSize() {\n\tvar docElt = document.documentElement;\n\tdocElt.style.fontSize = Math.min(\n\t\tMath.max(0.8, docElt.clientWidth / 1440), 1.2\n\t) * (window.remBase || 100) + 'px';\n\tconsole.log(docElt.clientWidth / 1440);\n\treturn resetFontSize;\n}\n\nwindow.addEventListener('resize', resetFontSize(), false);"]}